{"version":3,"sources":["components/Contact.js","components/ContactList.js","components/newNumberForm.js","services/persons.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["Contact","person","remove","name","number","onClick","contactList","persons","map","key","newNumberForm","props","value","newName","onChange","nameChange","newNumber","numberChange","handleClick","baseUrl","axios","get","then","response","data","newPerson","post","put","id","delete","catch","error","console","log","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","ErrorMsg","App","useState","setPersons","shownPersons","setShownPersons","setNewName","setNewNumber","newSearch","setNewSearch","newNoti","setNewNoti","newError","setNewError","useEffect","personService","updateAllPStates","showNotification","setTimeout","showError","Error","event","val1","target","filter","toUpperCase","includes","preventDefault","some","window","confirm","iD","find","p","newContact","newPersons","ContactList","user","newContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0de03c10.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Contact = ({person, remove}) => {\r\n    return (\r\n        <div>\r\n            <p>{person.name} {person.number} \r\n                <button onClick={() => remove(person)}>\r\n                    remove\r\n                </button>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact","import React from 'react'\r\nimport Contact from './Contact'\r\n\r\nconst contactList = ({persons, remove}) => {\r\n    return (\r\n        <ul>\r\n            {persons.map(person => \r\n                <div key={person.name}>\r\n                    <Contact person={person} remove={remove} />\r\n                </div>\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default contactList","import React from 'react'\r\n\r\nconst newNumberForm = (props) => {\r\n    return (\r\n        <form>\r\n            <div>\r\n                name: <input value={props.newName} onChange={props.nameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input value={props.newNumber} onChange={props.numberChange} />\r\n            </div>\r\n            <button onClick={props.handleClick}>add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default newNumberForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const promise = axios.get(baseUrl)\r\n    return promise.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n    const promise = axios.post(baseUrl, newPerson)\r\n    return promise.then(response => response.data)\r\n}\r\n\r\nconst update = (newPerson) => {\r\n    const promise = axios.put(`${baseUrl}/${newPerson.id}`, newPerson)\r\n    return promise.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    axios.delete(`${baseUrl}/${id}`)\r\n    .catch(error => console.log(error))\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    remove\r\n}\r\n","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === '') {\r\n        return null\r\n    }\r\n\r\n    const notiStyle = {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5\r\n    }\r\n\r\n    return (\r\n        <div style={notiStyle}>\r\n            <p>{message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst ErrorMsg = ({message}) => {\r\n    if (message === '') {\r\n        return null\r\n    }\r\n\r\n    const errorStyle = {\r\n        color: 'red',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5\r\n    }\r\n\r\n    return (\r\n        <div style={errorStyle}>\r\n            <p>{message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMsg","import React, {useState, useEffect} from 'react';\nimport ContactList from './components/ContactList'\nimport NewNumberForm from './components/newNumberForm'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport ErrorMsg from './components/Error'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ shownPersons, setShownPersons ] = useState(persons)\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ newNoti, setNewNoti] = useState('')\n  const [ newError, setNewError] = useState('')\n\n  useEffect(() => {\n    personService\n    .getAll()\n    .then(response => updateAllPStates(response))\n  }, [])\n\n  const updateAllPStates = data => {\n    setPersons(data)\n    setShownPersons(data)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    let val1 = event.target.value\n    setNewSearch(val1)\n    setShownPersons(persons.filter(person => person.name.toUpperCase().includes(val1.toUpperCase())))\n  }\n\n  const handleClick = (event) => {\n    event.preventDefault()\n    \n    if (persons.some(person => person.name === newName)) {\n      const alert = window.confirm(`${newName} is already added to the phonebook, do you want to replace the old number?`)\n      if (alert) {\n        const iD = persons.find(p => p.name === newName).id\n        const newContact = {\n          name: newName,\n          number: newNumber,\n          id: iD\n        }\n        personService\n        .update(newContact)\n        .then(response => {\n          const newPersons = persons.map(p => \n            p.name === newContact.name\n            ? {...newContact}\n            : p\n          )\n          setPersons(newPersons)\n          setShownPersons(newPersons.filter(person =>\n            person.name.toUpperCase().includes(newSearch.toUpperCase())))\n            showNotification(`Updated ${newContact.name}`)\n        })\n        .catch(() => {\n          showError(`Information of ${newContact.name} has already been removed from the server, please refresh.`)\n        })\n      }\n    } else {\n      const newContact = {\n        name: newName,\n        number: newNumber\n      }\n      personService\n      .create(newContact)\n      .then(response => {\n        setPersons(response)\n        setShownPersons(response.filter(person => \n          person.name.toUpperCase().includes(newSearch.toUpperCase())))\n      })\n      showNotification(`Added ${newContact.name}`)\n    }\n    setNewNumber('')\n    setNewName('')\n  }\n\n  const handleRemove = user => {\n    if (window.confirm(`Delete ${user.name} ?`)) {\n      personService.remove(user.id)\n      const newContacts = persons.filter(person => person.id !== user.id)\n      updateAllPStates(newContacts)\n      showNotification(`Removed ${user.name}`)\n    }\n  }\n\n  const showNotification = message => {\n    setNewNoti(message)\n    setTimeout(() => {\n      setNewNoti('')\n    }, 3000)\n  }\n\n  const showError = message => {\n    setNewError(message)\n    setTimeout(() => {\n      setNewError('')\n    }, 7000)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={newNoti}/>\n      <ErrorMsg message={newError}/>\n      search: <input value={newSearch} onChange={handleSearchChange} />\n      <h2>Add new number</h2>\n      <NewNumberForm \n        newName={newName} nameChange={handleNameChange}\n        newNumber={newNumber} numberChange={handleNumberChange}\n        handleClick={handleClick}\n      />\n      <h2>Numbers</h2>\n      <ContactList persons={shownPersons} remove={handleRemove} />\n    </div>\n  )\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}